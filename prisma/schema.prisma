// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id        BigInt   @id @default(autoincrement())
  username  String   @unique
  password  String
  isAdmin   Boolean  @default(false) @map("is_admin")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

// 系统配置模型
model SystemConfig {
  id          BigInt   @id @default(autoincrement())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("system_configs")
}

// 定义趋势类型枚举
enum ETrendType {
  UPWARD    // 上升趋势
  DOWNWARD  // 下降趋势
  STABLE    // 平稳趋势
  VOLATILE  // 波动趋势
  UNKNOWN   // 未知或数据不足
}

model Advertiser {
  id                BigInt   @id @default(autoincrement())
  advId             String   @unique @map("adv_id")
  advName           String   @map("adv_name")
  mId               String?  @map("m_id")
  advCategory       String?  @map("adv_category")
  advType           String?  @map("adv_type")
  mailingRegion     String?  @map("mailing_region")
  monthlyVisits     String?  @map("monthly_visits")
  rd                String?  @map("rd")
  epc30Day          String?  @map("30_epc")
  rate30Day         String?  @map("30_rate")
  affBa             String?  @map("aff_ba")
  affBaUnit         String?  @map("aff_ba_unit")
  affBaText         String?  @map("aff_ba_text")
  approvalType      String?  @map("approval_type")
  approvalTypeText  String?  @map("approval_type_text")
  joinStatus        String?  @map("join_status")
  joinStatusText    String?  @map("join_status_text")
  advLogo           String?  @map("adv_logo")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  
  dailyEpc DailyEpc[]
  entityTrend EntityTrend?
  
  @@map("advertisers")
}

model CrawlLog {
  id                BigInt   @id @default(autoincrement())
  crawlDate         DateTime @map("crawl_date")
  totalAdvertisers  Int?     @map("total_advertisers")
  successCount      Int?     @map("success_count")
  errorCount        Int?     @map("error_count")
  startTime         DateTime @map("start_time")
  endTime           DateTime? @map("end_time")
  durationSeconds   Int?     @map("duration_seconds")
  status            String
  errorMessage      String?  @map("error_message")
  createdAt         DateTime @default(now()) @map("created_at")
  
  @@map("crawl_logs")
}

// 每日 EPC 原始数据表
model DailyEpc {
  id        BigInt    @id @default(autoincrement())
  entityId  BigInt    @map("entity_id") // 对应 Advertiser 的 id
  date      DateTime  @db.Date
  epcValue  Decimal   @map("epc_value") @db.Decimal(10, 4)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  advertiser Advertiser @relation(fields: [entityId], references: [id], onDelete: Cascade)

  @@unique([entityId, date])
  @@index([entityId, date])
  @@map("daily_epc")
}

// 实体趋势预计算表
model EntityTrend {
  id                    BigInt      @id @default(autoincrement())
  entityId             BigInt      @unique @map("entity_id") // 对应 Advertiser 的 id
  
  // 近7天趋势数据
  last7DayAvgEPC       Decimal?    @map("last_7_day_avg_epc") @db.Decimal(10, 4)
  epcSlope7Day         Decimal?    @map("epc_slope_7_day") @db.Decimal(10, 4)
  epcTrendCategory7Day ETrendType? @map("epc_trend_category_7_day")
  
  // 近14天趋势数据
  last14DayAvgEPC      Decimal?    @map("last_14_day_avg_epc") @db.Decimal(10, 4)
  epcSlope14Day        Decimal?    @map("epc_slope_14_day") @db.Decimal(10, 4)
  epcTrendCategory14Day ETrendType? @map("epc_trend_category_14_day")
  
  // 近30天趋势数据
  last30DayAvgEPC      Decimal?    @map("last_30_day_avg_epc") @db.Decimal(10, 4)
  epcSlope30Day        Decimal?    @map("epc_slope_30_day") @db.Decimal(10, 4)
  epcTrendCategory30Day ETrendType? @map("epc_trend_category_30_day")
  
  lastCalculatedAt     DateTime    @default(now()) @updatedAt @map("last_calculated_at")
  
  advertiser Advertiser @relation(fields: [entityId], references: [id], onDelete: Cascade)

  @@map("entity_trends")
}


